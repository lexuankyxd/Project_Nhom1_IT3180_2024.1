--
-- PostgreSQL database dump
--

-- Dumped from database version 16.6 (Ubuntu 16.6-0ubuntu0.24.04.1)
-- Dumped by pg_dump version 16.6 (Ubuntu 16.6-0ubuntu0.24.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.users_id_seq OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: account; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.account (
    account_id bigint DEFAULT nextval('public.users_id_seq'::regclass) NOT NULL,
    phone_number character varying(30),
    email character varying(320),
    password_hash character(60),
    user_profile character(24),
    username character varying(64)
);


ALTER TABLE public.account OWNER TO postgres;

--
-- Name: comment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comment (
    comment_id bigint NOT NULL,
    user_id bigint,
    post_id bigint,
    reply_comment bigint,
    content character varying(100),
    "timestamp" time without time zone DEFAULT CURRENT_TIME
);


ALTER TABLE public.comment OWNER TO postgres;

--
-- Name: event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.event (
    event_id bigint NOT NULL,
    user_id bigint,
    time_created timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    time_start time without time zone,
    time_end time without time zone,
    lat numeric(8,6),
    long numeric(9,6)
);


ALTER TABLE public.event OWNER TO postgres;

--
-- Name: friend; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.friend (
    user1 character varying(24) NOT NULL,
    user2 character varying(24) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.friend OWNER TO postgres;

--
-- Name: friend_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.friend_request (
    sender character varying(24) NOT NULL,
    receiver character varying(24) NOT NULL,
    "timestamp" timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.friend_request OWNER TO postgres;

--
-- Name: liked; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.liked (
    user_id bigint NOT NULL,
    post_id bigint NOT NULL
);


ALTER TABLE public.liked OWNER TO postgres;

--
-- Name: message; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.message (
    to_user character varying(24),
    from_user character varying(24),
    content character varying(500) NOT NULL,
    sent_time timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE public.message OWNER TO postgres;

--
-- Name: post; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.post (
    post_id bigint NOT NULL,
    account_id bigint,
    comment_count integer DEFAULT 0,
    like_count integer DEFAULT 0,
    content character varying(200),
    media character varying(100),
    latitude numeric(8,6),
    longitude numeric(9,6)
);


ALTER TABLE public.post OWNER TO postgres;

--
-- Name: saved_post; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.saved_post (
    user_id bigint NOT NULL,
    post_id bigint NOT NULL
);


ALTER TABLE public.saved_post OWNER TO postgres;

--
-- Name: account account_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.account
    ADD CONSTRAINT account_pkey PRIMARY KEY (account_id);


--
-- Name: comment comment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment
    ADD CONSTRAINT comment_pkey PRIMARY KEY (comment_id);


--
-- Name: event event_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event
    ADD CONSTRAINT event_pkey PRIMARY KEY (event_id);


--
-- Name: liked liked_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.liked
    ADD CONSTRAINT liked_pkey PRIMARY KEY (user_id, post_id);


--
-- Name: post post_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.post
    ADD CONSTRAINT post_pkey PRIMARY KEY (post_id);


--
-- Name: saved_post saved_post_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.saved_post
    ADD CONSTRAINT saved_post_pkey PRIMARY KEY (user_id, post_id);


--
-- Name: account unique_email; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.account
    ADD CONSTRAINT unique_email UNIQUE (email);


--
-- Name: account unique_phonenumber; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.account
    ADD CONSTRAINT unique_phonenumber UNIQUE (phone_number);


--
-- Name: account unique_profile; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.account
    ADD CONSTRAINT unique_profile UNIQUE (user_profile);


--
-- Name: friend unique_rela; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.friend
    ADD CONSTRAINT unique_rela UNIQUE (user1, user2);


--
-- Name: friend_request unique_req; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.friend_request
    ADD CONSTRAINT unique_req UNIQUE (sender, receiver);


--
-- Name: account unique_username; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.account
    ADD CONSTRAINT unique_username UNIQUE (username);


--
-- Name: comment comment_post_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment
    ADD CONSTRAINT comment_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.post(post_id);


--
-- Name: comment comment_reply_comment_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment
    ADD CONSTRAINT comment_reply_comment_fkey FOREIGN KEY (reply_comment) REFERENCES public.comment(comment_id);


--
-- Name: comment comment_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment
    ADD CONSTRAINT comment_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.account(account_id);


--
-- Name: event event_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.event
    ADD CONSTRAINT event_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.account(account_id);


--
-- Name: liked liked_post_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.liked
    ADD CONSTRAINT liked_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.post(post_id);


--
-- Name: liked liked_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.liked
    ADD CONSTRAINT liked_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.account(account_id);


--
-- Name: post post_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.post
    ADD CONSTRAINT post_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.account(account_id);


--
-- Name: saved_post saved_post_post_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.saved_post
    ADD CONSTRAINT saved_post_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.post(post_id);


--
-- Name: saved_post saved_post_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.saved_post
    ADD CONSTRAINT saved_post_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.account(account_id);


--
-- PostgreSQL database dump complete
--

